#include <JuceHeader.h>
#include "MainComponent.h"

class NewPRojectApplication : public juce::JUCEApplication
{
public:
    NewPRojectApplication() {}
    const juce::String getApplicationName() override { return "{{project_name}}"; }
    const juce::String getApplicationVersion() override { return "1.0.0"; }
    bool moreThanOneInstanceAllowed() override { return true; }
    void initialise(const juce::String& commandLine) override {
        mainWindow.reset(new MainWindow(getApplicationName()));
    }
    void shutdown() override {
        mainWindow = nullptr;
    }
    void systemRequestedQuit() override {
        quit();
    }
    void anotherInstanceStarted(const juce::String& commandLine) override {
        // TODO: Implement this
    }
    class MainWindow : public juce::DocumentWindow
    {
    public:
        MainWindow(const juce::String& name) : juce::DocumentWindow(name, juce::Desktop::getInstance().getDefaultLookAndFeel().findColour(juce::ResizableWindow::backgroundColourId), juce::DocumentWindow::allButtons){
            setUsingNativeTitleBar(true);
            setContentOwned(new MainComponent(), true);
            setResizable(true, true);
            centreWithSize(getWidth(), getHeight());
            setVisible(true);
        }
        void closeButtonPressed() override {
            JUCEApplication::getInstance()->systemRequestedQuit();
        }
    private:
        JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR(MainWindow)
    };
private:
    std::unique_ptr<MainWindow> mainWindow;
};

START_JUCE_APPLICATION(NewPRojectApplication)